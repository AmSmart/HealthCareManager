@page "/"
@using HealthCareManager.Shared.Models
@using System.Security.Claims;
@inject NavigationManager Navigation

@code {
    [CascadingParameter]
    public Task<AuthenticationState> AuthenticationState { get; set; } = default!;

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        var authState = await AuthenticationState;

        if (!authState.User.Identity?.IsAuthenticated ?? false)
        {
            Navigation.NavigateTo(AppRoutes.Login);
        }
        else
        {
            switch (GetUserType(authState))
            {
                case UserType.Admin:
                    Navigation.NavigateTo(AppRoutes.AdminDashboard);
                    break;

                case UserType.Doctor:
                    Navigation.NavigateTo(AppRoutes.DoctorDashboard);
                    break;

                case UserType.Pharmacist:
                    Navigation.NavigateTo(AppRoutes.PharmacistDashboard);
                    break;
            }
        }
    }

    private UserType GetUserType(AuthenticationState authState)
    {
        string userTypeString = authState.User.FindFirstValue(nameof(UserType));
        UserType userType = (UserType)Enum.Parse(typeof(UserType), userTypeString);
        return userType;
    }
}